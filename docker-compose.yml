version: "2.1"

services:
  client:
    build:
      context: ./client
    volumes:
      - ./client:/app
    ports:
      - "8080:8080"
    depends_on:
      - api

  api:
    build:
      context: .
    command: uvicorn api:app --host 0.0.0.0 --reload
    volumes:
      - ./src:/src
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - db
    restart: unless-stopped

  bot:
    build:
      context: .
    command: python3 twitch_bot.py
    volumes:
      - ./src:/src
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build:
      context: .
    command: celery --app=worker.celery worker --loglevel=info
    volumes:
      - ./src:/src
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - api
      - bot
    restart: unless-stopped

  db:
    image: mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - store:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped

  redis:
    image: redis:6-alpine

  celery:
    build: .
    command: celery flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - api
      - redis
      - bot
      - worker

volumes:
  store:
